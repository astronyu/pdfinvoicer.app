/*
      # Update bank_info table for bank_address and RLS
      1. Changes
        - `bank_info`
          - Add `bank_address` column if it doesn't exist (text, default empty string)
      2. Security
        - Enable RLS on `bank_info` table
        - Add RLS policies for authenticated users to manage their own bank information:
          - SELECT: Users can read their own bank info.
          - INSERT: Users can create their own bank info.
          - UPDATE: Users can update their own bank info.
          - DELETE: Users can delete their own bank info.
    */
    -- Ensure bank_info table exists (if not already created by other migrations)
    CREATE TABLE IF NOT EXISTS bank_info (
      id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
      user_id uuid REFERENCES auth.users(id) ON DELETE CASCADE NOT NULL UNIQUE,
      bank_name text DEFAULT '' NOT NULL,
      account_number text DEFAULT '' NOT NULL,
      swift_code text DEFAULT '' NOT NULL,
      contact_name text DEFAULT '' NOT NULL,
      contact_phone text DEFAULT '' NOT NULL,
      contact_email text DEFAULT '' NOT NULL,
      bank_address text DEFAULT '' NOT NULL -- Ensure this column exists
    );

    -- Add bank_address column if it doesn't exist
    DO $$
    BEGIN
      IF NOT EXISTS (
        SELECT 1 FROM information_schema.columns
        WHERE table_name = 'bank_info' AND column_name = 'bank_address'
      ) THEN
        ALTER TABLE bank_info ADD COLUMN bank_address text DEFAULT '' NOT NULL;
      END IF;
    END $$;

    -- Enable Row Level Security (RLS)
    ALTER TABLE bank_info ENABLE ROW LEVEL SECURITY;

    -- Drop existing policies to prevent conflicts if they were partially created
    DROP POLICY IF EXISTS "Users can select their own bank info." ON bank_info;
    DROP POLICY IF EXISTS "Users can insert their own bank info." ON bank_info;
    DROP POLICY IF EXISTS "Users can update their own bank info." ON bank_info;
    DROP POLICY IF EXISTS "Users can delete their own bank info." ON bank_info;

    -- RLS Policy for SELECT: Users can read their own bank info
    CREATE POLICY "Users can select their own bank info."
      ON bank_info FOR SELECT
      TO authenticated
      USING (auth.uid() = user_id);

    -- RLS Policy for INSERT: Users can create their own bank info
    CREATE POLICY "Users can insert their own bank info."
      ON bank_info FOR INSERT
      TO authenticated
      WITH CHECK (auth.uid() = user_id);

    -- RLS Policy for UPDATE: Users can update their own bank info
    CREATE POLICY "Users can update their own bank info."
      ON bank_info FOR UPDATE
      TO authenticated
      USING (auth.uid() = user_id);

    -- RLS Policy for DELETE: Users can delete their own bank info
    CREATE POLICY "Users can delete their own bank info."
      ON bank_info FOR DELETE
      TO authenticated
      USING (auth.uid() = user_id);